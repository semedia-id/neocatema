$tones: ( 
	b: -5, d3: -4, d2: -3, d1: -2, d:-1, n:0,
	l:1, l1:2, l2:3, l3:4, w: 5
);

[class*='ncc-'] {
	@each $name,$step in $tones {
		--c-#{$name}: #{hsl-css-var($step)};
	}

	--c-co:  unquote("hsl(calc(var(--h) + 180), var(--s), var(--l))");
	--c-a1:  unquote("hsl(calc(var(--h) + 60), var(--s), var(--l))");
	--c-a2:  unquote("hsl(calc(var(--h) - 60), var(--s), var(--l))");
	
}

@mixin schemer($scheme) {

	@each $var, $val in $scheme {
	
		$white: 95%;
		$black: 5%;


		@if $var != background and $var != text 
			and $var != shade and $var != shadow 
			and $var != border and $var != hilite {
			
			$h: round(hue($val)/1deg);
			$s: round(saturation($val));
			$l: round(lightness($val));
			$uf: ($white - $l)/5;
			$df: ($l - $black)/5;

			--#{$var}: #{$val};
			--#{$var}_h: #{$h};		
			--#{$var}_s: #{$s};		
			--#{$var}_l: #{$l};
			--#{$var}_t: #{text-color($val,$white,$black)};
		
			[class*='ncc-#{$var}'] {
			
				@include hsl-var-name($var);

				--uf: calc((#{$white} - var(--l)) / 5);
				--df: calc((var(--l) - #{$black}) / 5);
			}
			
			.ncc-#{$var} {
			
				&.bg, .bg {
					@if $l > 50% {
						--t: var(--c-b);
					} @else {
						--t: var(--c-w);
					}
					background-color: var(--c-n);
					color: var(--t);
				}

				&.co, .co {
					@if $l > 50% {
						--t: var(--c-b);
					} @else {
						--t: var(--c-w);
					}
					background-color: var(--c-co);
					color: var(--t);
				}

				
				@each $name,$step in $tones {

					&.color-#{$name}, .color-#{$name} {
						
						color: var(--c-#{$name});
					}
					
					&.bg-#{$name}, .bg-#{$name} {
						
						$r: $l + ($uf * $step);

						@if ($step < 0) {
							$r: $l + ($df * $step);
						}
						
						background-color: var(--c-#{$name});
						@if ($r < 50%) { 
							color: var(--c-w); 
							--text: var(--c-w);
						} @else { 
							color: var(--c-b); 
							--text: var(--c-b);
						}
					}
					
					
				}			

			}
		} @else {
			--#{$var}: #{$val};
		}
	}
}

.light-scheme {
	@include schemer($light);
}

.dark-scheme {
	@include schemer($dark);
}



.hsl-pal {

	a,a:hover,a:active,a:focus { color: inherit !important; }

	@extend [class*='ncc-'];
	
	&.bg,.bg { background-color: var(--c-n); color: var(--t); }
	&.bg-a1,.bg-a1 { background-color: var(--c-a1); color: var(--t); }
	&.bg-a2,.bg-a2 { background-color: var(--c-a2); color: var(--t); }
	&.bg-co,.bg-co { background-color: var(--c-co); color: var(--t); }
	&.bg-b,.bg-b { background-color: var(--b); color: var(--c-w); }
	&.bg-w,.bg-w { background-color: var(--w); color: var(--c-b); }
	&.bg-d,.bg-d { background-color: var(--c-d); color: var(--t); }
	&.bg-d1,.bg-d1 { background-color: var(--c-d1); color: var(--w); }
	&.bg-d2,.bg-d2 { background-color: var(--c-d2); color: var(--w); }
	&.bg-d3,.bg-d3 { background-color: var(--c-d3); color: var(--w); }
	&.bg-l,.bg-l { background-color: var(--c-l); color: var(--t); }
	&.bg-l1,.bg-l1 { background-color: var(--c-l1); color: var(--b); }
	&.bg-l2,.bg-l2 { background-color: var(--c-l2); color: var(--b); }
	&.bg-l3,.bg-l3 { background-color: var(--c-l3); color: var(--b); }
}
