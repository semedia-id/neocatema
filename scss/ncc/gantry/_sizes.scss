
// minimum size is 5%
//:not(.grow):not(.shrink):not(.hidden)


@for $i from 1 through 5 {
	%size-#{$i} {
		@include flex(0 5%);
		width: 5%;
	}
}

@for $i from 6 through 99 {
	%size-#{$i} {
		@include flex(0 $i * 1%);
		width: $i * 1%;
	}
}

%size-100 {
	width: 100% !important;
	max-width: 100% !important;
	@include flex-grow(0);
	@include flex-basis(100%);
}


@for $i from 1 through 100 {
	.size-#{$i},
	.g-block.size-#{$i},
	[size='#{$i}'] {
		@extend %size-#{$i};
	}
}


// Equal size fallbacks for older browsers
@each $i, $n in ('33-3', 1/3), ('16-7', 1/6), ('14-3', 1/7), ('12-5', 1/8), ('11-1', 1/9), ('9-1', 1/11), ('8-3', 1/12) {
	.g-block.size-#{$i},
	.size-#{$i},
	%size-#{$i},
	[size='#{$i}'] {
		@include flex(0 percentage($n));
		width: percentage($n);
		max-width: percentage($n);
	}
}


@include breakpoint(mobile-only) {

	[size],
	.g-block[class*="size-"] {
		@include flex-grow(0);
		@include flex-basis(100%);
		max-width: 100%;
		width: 100% !important;
	}

}


.g-block {
	> .g-content { width: 100%; }
}

.fit-height {

	.g-container,
	.g-grid,
	.g-block,
	.g-content {
		height: 100%;
	}

}

.full { @extend %size-100; }
.half { @extend %size-50; }
.third { @extend %size-33-3; }
.quater { @extend %size-25; }

