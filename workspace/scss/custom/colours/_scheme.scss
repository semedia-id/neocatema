@mixin root-schemer($var,$val) {
	
	--#{$var}: #{$val}; 

	@if $var == shade or $var == border 
		or $var== shadow or $var == light {
	
		--#{$var}1: #{rgba($val,.2)};
		--#{$var}2: #{rgba($val,.4)};
		--#{$var}3: #{rgba($val,.6)};
		
		
	}
	
}

:root {
	@media (prefers-color-scheme: 'dark') {
		@each $var, $val in $dark {
			@include root-schemer($var,$val);
		}
	}

	@media (prefers-color-scheme: 'light') {
		@each $var, $val in $light {
			@include root-schemer($var,$val);
		}
	}
}



@mixin schemer($scheme) {

	@each $var, $val in $scheme {
	
		@include root-schemer($var,$val);

		@if $var != background and $var != text 
			and $var != shade and $var != border 
			and $var != light and $var != shadow {		

			$w: 95%;
			$b: 5%;
			$h: round(hue($val)/1deg);
			$s: round(saturation($val));
			$l: round(lightness($val));
			$u: ($w - $l)/5;
			$d: ($l - $b)/5;
	
			--#{$var}-h: #{$h};
			--#{$var}-s: #{$s};
			--#{$var}-l: #{$l};
			--#{$var}-uf: #{$u};
			--#{$var}-df: #{$d};
	
			.ncc-#{$var} {

				@include hsl-var($var);

				--c: #{unquote('hsl(var(--h), var(--s), var(--l))')};
				--b: #{unquote('hsl(var(--h), var(--s), 3%)')}; 
				--w: #{unquote('hsl(var(--h), var(--s), 97%)')}; 
				

				@if ($l<50%) { --t: var(--w); } 
				@else {	--t: var(--b); }
			
			}

		
		}
			
	}
		
}


.light-scheme {		
	@include schemer($light)
}

.dark-scheme {		
	@include schemer($dark)
}


.red { @extend .ncc-error }
.yellow { @extend .ncc-warning }
.blue {@extend .ncc-info }
.green { @extend .ncc-success }
